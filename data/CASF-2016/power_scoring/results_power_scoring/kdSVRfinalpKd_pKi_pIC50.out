     code  logKa     score
1    4llx   2.89  6.254325
2    5c28   5.66  6.244958
3    3uuo   7.96  6.244899
4    3ui7   9.00  6.244899
5    5c2h  11.09  6.244899
6    2v00   3.66  6.244900
7    3wz8   5.82  6.244899
8    3pww   7.32  6.244899
9    3prs   7.82  6.244899
10   3uri   9.00  6.244899
11   4m0z   5.19  6.244899
12   4m0y   6.46  6.244899
13   3qgy   7.80  6.244899
14   4qd6   8.64  6.244899
15   4rfm  10.05  6.244899
16   4cr9   4.10  6.244905
17   4cra   7.22  6.244899
18   4x6p   8.30  6.244899
19   4crc   8.72  6.244899
20   4ty7   9.52  6.244899
21   5aba   2.98  6.244899
22   5a7b   3.57  6.244899
23   4agn   3.97  6.244899
24   4agp   4.69  6.244899
25   4agq   5.01  6.244899
26   3bgz   6.26  6.244899
27   3jya   6.89  6.244899
28   2c3i   7.60  6.244899
29   4k18   8.96  6.244899
30   5dwr  11.22  6.244899
31   3mss   4.66  6.244899
32   3k5v   6.30  6.244899
33   3pyy   6.86  6.244899
34   2v7a   8.30  6.244899
35   4twp  10.00  6.244899
36   3wtj   6.53  6.244899
37   3zdg   7.10  6.244899
38   3u8k   8.66  6.244899
39   4qac   9.40  6.244899
40   3u8n  10.17  6.244899
41   1a30   4.30  6.244899
42   2qnq   6.11  6.244899
43   1g2k   7.96  6.244899
44   1eby   9.70  6.244899
45   3o9i  11.82  6.244899
46   4lzs   4.80  6.244899
47   3u5j   5.61  6.244899
48   4wiv   6.26  6.244899
49   4ogj   6.79  6.244899
50   3p5o   7.30  6.244899
51   1ps3   2.28  6.244899
52   3dx1   3.58  6.251635
53   3d4z   4.89  6.244901
54   3dx2   6.82  6.244966
55   3ejr   8.57  6.244899
56   3l7b   2.40  6.244899
57   4eky   3.52  6.244899
58   3g2n   4.09  6.244899
59   3syr   5.10  6.244899
60   3ebp   5.91  6.244899
61   2w66   4.05  6.244899
62   2w4x   4.85  6.244899
63   2wca   5.60  6.244899
64   2xj7   6.66  6.244899
65   2vvn   7.30  6.244899
66   3aru   3.22  6.244899
67   3arv   5.64  6.244901
68   3ary   6.00  6.246434
69   3arq   6.40  6.244899
70   3arp   7.15  6.244899
71   4ih5   4.11  6.244900
72   4ih7   5.24  6.244899
73   3cj4   6.51  6.244899
74   4eo8   8.15  6.244899
75   3gnw   9.10  6.244899
76   1gpk   5.37  6.244899
77   1gpn   6.48  6.244899
78   1h23   8.35  6.244899
79   1h22   9.10  6.244899
80   1e66   9.89  6.244899
81   3f3a   4.19  6.244899
82   3f3c   6.02  6.244899
83   4mme   6.50  6.244899
84   3f3d   7.16  6.244900
85   3f3e   7.70  6.244899
86   2wbg   4.45  6.244899
87   2cbv   5.48  6.244904
88   2j78   6.42  6.244900
89   2j7h   7.19  6.244907
90   2cet   8.02  6.244899
91   3udh   2.85  6.244907
92   3rsx   4.41  6.244909
93   4djv   6.72  6.244899
94   2vkm   8.74  6.244899
95   4gid  10.77  6.244899
96   4jfs   5.27  6.244899
97   4j28   5.70  6.244905
98   2wvt   6.12  6.244898
99   2xii   7.20  6.244899
100  4pcs   7.85  6.244902
101  3rr4   4.55  6.244899
102  1s38   5.15  6.244900
103  1r5y   6.46  6.244930
104  3gc5   7.26  6.244899
105  3ge7   8.70  6.244899
106  4dli   5.62  6.244899
107  2zb1   6.32  6.244899
108  4f9w   6.94  6.244899
109  3e92   8.00  6.244899
110  3e93   8.85  6.244899
111  4owm   2.96  6.265412
112  3twp   3.92  6.288116
113  3r88   4.82  6.244985
114  4gkm   5.17  6.244899
115  3qqs   5.82  6.244899
116  3gv9   2.12  6.267225
117  3gr2   2.52  6.269577
118  4kz6   3.10  6.244967
119  4jxs   4.74  6.244899
120  2r9w   5.10  6.244899
121  2hb1   3.80  6.244993
122  1bzc   4.92  6.244899
123  2qbr   6.33  6.244899
124  2qbq   7.44  6.244899
125  2qbp   8.40  6.244899
126  1q8t   4.76  6.244899
127  1ydr   5.52  6.244899
128  1q8u   5.96  6.244899
129  1ydt   7.32  6.244899
130  3ag9   8.05  6.244899
131  3fcq   2.77  6.244937
132  1z9g   5.64  6.244899
133  1qf1   7.32  6.244899
134  5tmn   8.04  6.244899
135  4tmn  10.17  6.244899
136  4ddk   2.29  6.244963
137  4ddh   3.32  6.244899
138  3ivg   4.30  6.244899
139  3coz   5.57  6.244899
140  3coy   6.02  6.244899
141  3pxf   4.43  6.244899
142  4eor   6.30  6.244899
143  2xnb   6.83  6.244899
144  1pxn   7.15  6.244899
145  2fvd   8.52  6.244899
146  4k77   6.63  6.244899
147  4e5w   7.66  6.244899
148  4ivb   8.72  6.244899
149  4ivd   9.52  6.244899
150  4ivc  10.00  6.244899
151  4f09   6.70  6.244899
152  4gfm   7.22  6.244899
153  4hge   7.92  6.244899
154  4e6q   8.36  6.244899
155  4jia   9.22  6.244899
156  2brb   4.86  6.244899
157  2br1   5.14  6.244899
158  3jvr   5.72  6.244899
159  3jvs   6.54  6.244899
160  1nvq   8.25  6.244899
161  3acw   4.76  6.244899
162  4ea2   6.44  6.244899
163  2zcr   6.87  6.244899
164  2zy1   7.40  6.244899
165  2zcq   8.82  6.244899
166  1bcu   3.28  6.244901
167  3bv9   5.36  6.244899
168  1oyt   7.24  6.244899
169  2zda   8.40  6.244899
170  3utu  10.92  6.244899
171  3u9q   4.38  6.244899
172  2yfe   6.63  6.244899
173  3fur   8.00  6.244899
174  3b1m   8.48  6.244899
175  2p4y   9.00  6.244899
176  3uo4   6.52  6.244899
177  3up2   7.40  6.244899
178  3e5a   8.23  6.244899
179  2wtv   8.74  6.244899
180  3myg  10.70  6.244899
181  3kgp   2.57  6.246047
182  1c5z   4.01  6.245488
183  1o5b   5.77  6.244932
184  1owh   7.40  6.244899
185  1sqa   9.21  6.244899
186  4jsz   2.30  6.259948
187  3kwa   4.08  6.244899
188  2weg   6.50  6.246635
189  3ryj   7.80  6.244904
190  3dd0   9.00  6.244902
191  2xdl   3.10  6.244899
192  3b27   5.16  6.244899
193  1yc1   6.17  6.244899
194  3rlr   7.52  6.244899
195  2yki   9.46  6.244899
196  1z95   7.12  6.244899
197  3b68   8.40  6.244899
198  3b5r   8.77  6.244899
199  3b65   9.27  6.244899
200  3g0w   9.52  6.244899
201  4u4s   2.92  6.244899
202  1p1q   4.89  6.245189
203  1syi   5.44  6.244899
204  1p1n   6.80  6.244899
205  2al5   8.40  6.244899
206  3g2z   2.36  6.421107
207  3g31   2.89  6.273853
208  4de2   4.12  6.244899
209  4de3   5.52  6.244899
210  4de1   5.96  6.244899
211  1vso   4.72  6.244899
212  4dld   5.82  6.244899
213  3gbb   6.90  6.244899
214  3fv2   8.11  6.244899
215  3fv1   9.30  6.244899
216  4mgd   4.69  6.244899
217  2qe4   7.96  6.244899
218  1qkt   9.04  6.244899
219  2pog   9.54  6.244899
220  2p15  10.30  6.244899
221  2y5h   5.79  6.244899
222  1lpg   7.09  6.244899
223  2xbv   8.43  6.244899
224  1z6e   9.72  6.244899
225  1mq6  11.15  6.244899
226  1nc3   5.00  6.244899
227  1nc1   6.12  6.244899
228  1y6r  10.11  6.244899
229  4f2w  11.30  6.244899
230  4f3c  11.82  6.244899
231  1uto   2.27  6.245260
232  4abg   3.57  6.244899
233  3gy4   5.10  6.245128
234  1k1i   6.58  6.244899
235  1o3f   7.96  6.244899
236  2yge   5.06  6.244899
237  2fxs   6.06  6.244899
238  2iwx   6.68  6.244899
239  2wer   7.05  6.244899
240  2vw5   8.52  6.244899
241  4kzq   6.10  6.244899
242  4kzu   6.50  6.244899
243  4j21   7.41  6.244899
244  4j3l   7.80  6.244899
245  3kr8   8.10  6.244899
246  2ymd   3.16  6.244899
247  2wnc   6.32  6.244899
248  2xys   7.42  6.244899
249  2wn9   8.52  6.244899
250  2x00  11.33  6.244899
251  3ozt   4.13  6.244899
252  3ozs   5.33  6.244899
253  3oe5   6.88  6.244899
254  3oe4   7.47  6.244899
255  3nw9   9.00  6.244899
256  3ao4   2.07  6.244899
257  3zt2   2.84  6.244899
258  3zsx   3.28  6.244899
259  4cig   3.67  6.244899
260  3zso   5.12  6.244899
261  3n7a   3.70  6.244954
262  4ciw   4.82  6.244899
263  3n86   5.64  6.244899
264  3n76   6.85  6.244899
265  2xb8   7.59  6.244899
266  4bkt   3.62  6.244899
267  4w9c   4.65  6.244899
268  4w9l   5.02  6.244899
269  4w9i   5.96  6.244899
270  4w9h   6.73  6.244899
271  3nq9   4.03  6.245034
272  3ueu   5.24  6.244899
273  3uev   5.89  6.244899
274  3uew   6.31  6.244899
275  3uex   6.92  6.244899
276  3lka   2.82  6.244916
277  3ehy   5.85  6.244899
278  3tsk   7.17  6.244899
279  3nx7   8.10  6.244899
280  4gr0   9.55  6.244899
281  3dxg   2.40  6.245751
282  3d6q   3.76  6.245270
283  1w4o   5.22  6.244900
284  1o0h   5.92  6.244899
285  1u1b   7.80  6.244899

Summary of the scoring power: ===================================
The regression equation: logKa = -38.10 + 244.47 * Score
Number of favorable sample (N) = 285
Pearson correlation coefficient (R) = -0.195
Confidence interval of 90% Pearson R = [-0.287 ~ -0.099] 
Standard deviation in fitting (SD) = 2.13
=================================================================

Template command for running the bootstrap in R program==========

rm(list=ls());
require(boot);
data_all<-read.table("GAP_processed_score",header=TRUE);
aa<-c(1:nrow(data_all));

mycore<-function(x,indices)
{
data_1<-matrix(NA,285,2);
for(i in 1:285);
    {
        data_1[i,1]=data_all[x[indices][i],2];
        data_1[i,2]=data_all[x[indices][i],3];
    }
        data_2<-data.frame(data_1);
        names(data_2)<-c("a","b");
        cor(data_2$a,data_2$b);
};

data.boot<-boot(aa,mycore,R=10000,stype="i",sim="ordinary");
sink("GAP-ci.results");
a<-boot.ci(data.boot,conf=0.9,type=c("bca"));
print(a);
sink();

=================================================================
