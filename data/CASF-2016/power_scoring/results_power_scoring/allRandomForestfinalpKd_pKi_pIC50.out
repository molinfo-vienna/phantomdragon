     code  logKa     score
1    4llx   2.89  7.333067
2    5c28   5.66  7.402167
3    3uuo   7.96  7.372267
4    3ui7   9.00  7.466267
5    5c2h  11.09  7.424867
6    2v00   3.66  7.361233
7    3wz8   5.82  7.090267
8    3pww   7.32  7.021133
9    3prs   7.82  7.148633
10   3uri   9.00  6.895033
11   4m0z   5.19  7.154167
12   4m0y   6.46  7.247500
13   3qgy   7.80  7.242167
14   4qd6   8.64  7.278400
15   4rfm  10.05  7.338433
16   4cr9   4.10  7.448833
17   4cra   7.22  7.222767
18   4x6p   8.30  7.313533
19   4crc   8.72  7.158300
20   4ty7   9.52  7.219600
21   5aba   2.98  7.123367
22   5a7b   3.57  7.169333
23   4agn   3.97  7.216433
24   4agp   4.69  7.185467
25   4agq   5.01  7.245300
26   3bgz   6.26  7.163400
27   3jya   6.89  7.218467
28   2c3i   7.60  7.324967
29   4k18   8.96  7.264433
30   5dwr  11.22  7.030100
31   3mss   4.66  7.261333
32   3k5v   6.30  7.269267
33   3pyy   6.86  7.283533
34   2v7a   8.30  7.194400
35   4twp  10.00  7.303567
36   3wtj   6.53  7.319667
37   3zdg   7.10  7.109433
38   3u8k   8.66  7.177867
39   4qac   9.40  7.502133
40   3u8n  10.17  7.153100
41   1a30   4.30  7.021133
42   2qnq   6.11  7.089233
43   1g2k   7.96  7.262133
44   1eby   9.70  7.260367
45   3o9i  11.82  7.424533
46   4lzs   4.80  7.191100
47   3u5j   5.61  7.464000
48   4wiv   6.26  7.267667
49   4ogj   6.79  7.159900
50   3p5o   7.30  7.372433
51   1ps3   2.28  6.991633
52   3dx1   3.58  7.075067
53   3d4z   4.89  7.013667
54   3dx2   6.82  7.068000
55   3ejr   8.57  7.264233
56   3l7b   2.40  7.151300
57   4eky   3.52  7.310567
58   3g2n   4.09  7.342300
59   3syr   5.10  7.118500
60   3ebp   5.91  7.308900
61   2w66   4.05  6.989667
62   2w4x   4.85  7.222233
63   2wca   5.60  7.202333
64   2xj7   6.66  7.040300
65   2vvn   7.30  7.208933
66   3aru   3.22  7.249367
67   3arv   5.64  7.435967
68   3ary   6.00  7.312933
69   3arq   6.40  7.133067
70   3arp   7.15  7.490467
71   4ih5   4.11  7.310000
72   4ih7   5.24  7.260767
73   3cj4   6.51  7.043667
74   4eo8   8.15  7.172567
75   3gnw   9.10  7.172767
76   1gpk   5.37  7.020900
77   1gpn   6.48  7.191600
78   1h23   8.35  6.833467
79   1h22   9.10  6.829900
80   1e66   9.89  7.455700
81   3f3a   4.19  7.019933
82   3f3c   6.02  6.952733
83   4mme   6.50  7.302700
84   3f3d   7.16  6.950267
85   3f3e   7.70  6.924967
86   2wbg   4.45  7.412133
87   2cbv   5.48  7.095733
88   2j78   6.42  7.145167
89   2j7h   7.19  6.900767
90   2cet   8.02  7.326800
91   3udh   2.85  7.133967
92   3rsx   4.41  7.373600
93   4djv   6.72  7.250200
94   2vkm   8.74  7.087933
95   4gid  10.77  6.940633
96   4jfs   5.27  7.242967
97   4j28   5.70  7.237867
98   2wvt   6.12  6.968967
99   2xii   7.20  7.187133
100  4pcs   7.85  7.210267
101  3rr4   4.55  7.248100
102  1s38   5.15  7.228467
103  1r5y   6.46  7.285233
104  3gc5   7.26  7.094767
105  3ge7   8.70  7.031800
106  4dli   5.62  7.404000
107  2zb1   6.32  7.274633
108  4f9w   6.94  7.303400
109  3e92   8.00  7.200333
110  3e93   8.85  7.147767
111  4owm   2.96  7.200700
112  3twp   3.92  7.163033
113  3r88   4.82  7.183400
114  4gkm   5.17  7.127900
115  3qqs   5.82  7.135600
116  3gv9   2.12  7.155100
117  3gr2   2.52  7.466733
118  4kz6   3.10  7.139767
119  4jxs   4.74  7.091767
120  2r9w   5.10  7.077033
121  2hb1   3.80  7.129433
122  1bzc   4.92  7.173033
123  2qbr   6.33  7.078300
124  2qbq   7.44  7.080400
125  2qbp   8.40  7.091433
126  1q8t   4.76  7.052600
127  1ydr   5.52  7.123233
128  1q8u   5.96  7.109333
129  1ydt   7.32  7.170667
130  3ag9   8.05  7.017167
131  3fcq   2.77  7.192333
132  1z9g   5.64  7.250833
133  1qf1   7.32  7.056633
134  5tmn   8.04  7.188367
135  4tmn  10.17  7.133800
136  4ddk   2.29  7.219267
137  4ddh   3.32  7.299933
138  3ivg   4.30  7.209500
139  3coz   5.57  7.416667
140  3coy   6.02  7.382933
141  3pxf   4.43  7.450700
142  4eor   6.30  7.224300
143  2xnb   6.83  7.190900
144  1pxn   7.15  7.299833
145  2fvd   8.52  7.274433
146  4k77   6.63  7.208000
147  4e5w   7.66  7.202233
148  4ivb   8.72  7.386700
149  4ivd   9.52  7.380400
150  4ivc  10.00  7.358533
151  4f09   6.70  7.287800
152  4gfm   7.22  7.238933
153  4hge   7.92  7.337433
154  4e6q   8.36  7.301767
155  4jia   9.22  7.399467
156  2brb   4.86  7.387367
157  2br1   5.14  7.362767
158  3jvr   5.72  7.216333
159  3jvs   6.54  7.203667
160  1nvq   8.25  7.121733
161  3acw   4.76  7.180933
162  4ea2   6.44  7.105767
163  2zcr   6.87  7.147967
164  2zy1   7.40  7.096167
165  2zcq   8.82  6.991900
166  1bcu   3.28  7.447700
167  3bv9   5.36  6.858233
168  1oyt   7.24  7.141633
169  2zda   8.40  6.909433
170  3utu  10.92  7.192533
171  3u9q   4.38  7.212333
172  2yfe   6.63  7.316967
173  3fur   8.00  7.322467
174  3b1m   8.48  7.341967
175  2p4y   9.00  7.321200
176  3uo4   6.52  7.250667
177  3up2   7.40  7.252900
178  3e5a   8.23  7.266467
179  2wtv   8.74  7.323533
180  3myg  10.70  7.359000
181  3kgp   2.57  7.066133
182  1c5z   4.01  7.206900
183  1o5b   5.77  7.251733
184  1owh   7.40  7.054733
185  1sqa   9.21  7.055567
186  4jsz   2.30  7.340367
187  3kwa   4.08  7.179233
188  2weg   6.50  7.341100
189  3ryj   7.80  7.212700
190  3dd0   9.00  7.371467
191  2xdl   3.10  7.372533
192  3b27   5.16  7.339267
193  1yc1   6.17  7.327867
194  3rlr   7.52  7.327900
195  2yki   9.46  7.360367
196  1z95   7.12  7.339167
197  3b68   8.40  7.299600
198  3b5r   8.77  7.366633
199  3b65   9.27  7.340500
200  3g0w   9.52  7.405100
201  4u4s   2.92  7.258633
202  1p1q   4.89  7.007300
203  1syi   5.44  6.999567
204  1p1n   6.80  6.954967
205  2al5   8.40  7.077100
206  3g2z   2.36  7.211700
207  3g31   2.89  7.288467
208  4de2   4.12  7.159633
209  4de3   5.52  7.231733
210  4de1   5.96  7.198500
211  1vso   4.72  6.988700
212  4dld   5.82  7.033933
213  3gbb   6.90  6.970767
214  3fv2   8.11  7.055533
215  3fv1   9.30  6.949600
216  4mgd   4.69  7.365700
217  2qe4   7.96  7.276367
218  1qkt   9.04  7.294333
219  2pog   9.54  7.295333
220  2p15  10.30  7.349333
221  2y5h   5.79  7.269200
222  1lpg   7.09  7.202200
223  2xbv   8.43  7.309067
224  1z6e   9.72  7.311067
225  1mq6  11.15  7.287400
226  1nc3   5.00  7.186967
227  1nc1   6.12  7.285500
228  1y6r  10.11  7.301933
229  4f2w  11.30  7.302067
230  4f3c  11.82  7.257200
231  1uto   2.27  7.107167
232  4abg   3.57  7.028467
233  3gy4   5.10  7.293667
234  1k1i   6.58  7.102467
235  1o3f   7.96  7.406633
236  2yge   5.06  7.198067
237  2fxs   6.06  7.267600
238  2iwx   6.68  7.345833
239  2wer   7.05  7.393933
240  2vw5   8.52  7.254367
241  4kzq   6.10  7.169533
242  4kzu   6.50  7.153000
243  4j21   7.41  7.128100
244  4j3l   7.80  7.157200
245  3kr8   8.10  7.276267
246  2ymd   3.16  7.095667
247  2wnc   6.32  7.221700
248  2xys   7.42  7.292100
249  2wn9   8.52  7.436700
250  2x00  11.33  7.246200
251  3ozt   4.13  7.350667
252  3ozs   5.33  7.425400
253  3oe5   6.88  7.494400
254  3oe4   7.47  7.515233
255  3nw9   9.00  7.457967
256  3ao4   2.07  7.306500
257  3zt2   2.84  7.160667
258  3zsx   3.28  7.273067
259  4cig   3.67  7.142967
260  3zso   5.12  7.247500
261  3n7a   3.70  7.212767
262  4ciw   4.82  7.110200
263  3n86   5.64  7.221367
264  3n76   6.85  7.251300
265  2xb8   7.59  7.247200
266  4bkt   3.62  7.145933
267  4w9c   4.65  7.286267
268  4w9l   5.02  7.174567
269  4w9i   5.96  7.261733
270  4w9h   6.73  7.159333
271  3nq9   4.03  7.348533
272  3ueu   5.24  7.446833
273  3uev   5.89  7.239600
274  3uew   6.31  7.292300
275  3uex   6.92  7.212300
276  3lka   2.82  7.154900
277  3ehy   5.85  7.071000
278  3tsk   7.17  7.055833
279  3nx7   8.10  7.253500
280  4gr0   9.55  7.106067
281  3dxg   2.40  7.061933
282  3d6q   3.76  7.093367
283  1w4o   5.22  7.117067
284  1o0h   5.92  7.198200
285  1u1b   7.80  7.257067

Summary of the scoring power: ===================================
The regression equation: logKa = 1.47 + -4.11 * Score
Number of favorable sample (N) = 285
Pearson correlation coefficient (R) = 0.091
Confidence interval of 90% Pearson R = [-0.007 ~ 0.187] 
Standard deviation in fitting (SD) = 2.17
=================================================================

Template command for running the bootstrap in R program==========

rm(list=ls());
require(boot);
data_all<-read.table("GAP_processed_score",header=TRUE);
aa<-c(1:nrow(data_all));

mycore<-function(x,indices)
{
data_1<-matrix(NA,285,2);
for(i in 1:285);
    {
        data_1[i,1]=data_all[x[indices][i],2];
        data_1[i,2]=data_all[x[indices][i],3];
    }
        data_2<-data.frame(data_1);
        names(data_2)<-c("a","b");
        cor(data_2$a,data_2$b);
};

data.boot<-boot(aa,mycore,R=10000,stype="i",sim="ordinary");
sink("GAP-ci.results");
a<-boot.ci(data.boot,conf=0.9,type=c("bca"));
print(a);
sink();

=================================================================
