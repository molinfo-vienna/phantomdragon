     code  logKa     score
1    4llx   2.89  7.445833
2    5c28   5.66  7.397900
3    3uuo   7.96  7.594500
4    3ui7   9.00  7.630033
5    5c2h  11.09  7.485700
6    2v00   3.66  7.327667
7    3wz8   5.82  7.422833
8    3pww   7.32  7.266233
9    3prs   7.82  7.579133
10   3uri   9.00  7.217533
11   4m0z   5.19  7.647733
12   4m0y   6.46  7.563267
13   3qgy   7.80  7.557933
14   4qd6   8.64  7.503100
15   4rfm  10.05  7.547033
16   4cr9   4.10  7.548333
17   4cra   7.22  7.386667
18   4x6p   8.30  7.470633
19   4crc   8.72  7.524000
20   4ty7   9.52  7.330633
21   5aba   2.98  7.383367
22   5a7b   3.57  7.360267
23   4agn   3.97  7.414367
24   4agp   4.69  7.408833
25   4agq   5.01  7.325267
26   3bgz   6.26  7.319167
27   3jya   6.89  7.238100
28   2c3i   7.60  7.269833
29   4k18   8.96  7.485067
30   5dwr  11.22  7.246667
31   3mss   4.66  7.384333
32   3k5v   6.30  7.407500
33   3pyy   6.86  7.426633
34   2v7a   8.30  7.439233
35   4twp  10.00  7.568867
36   3wtj   6.53  7.561500
37   3zdg   7.10  7.330533
38   3u8k   8.66  7.338267
39   4qac   9.40  7.556467
40   3u8n  10.17  7.418000
41   1a30   4.30  7.340567
42   2qnq   6.11  7.378767
43   1g2k   7.96  7.689367
44   1eby   9.70  7.667367
45   3o9i  11.82  7.718533
46   4lzs   4.80  7.559433
47   3u5j   5.61  7.514467
48   4wiv   6.26  7.393733
49   4ogj   6.79  7.589633
50   3p5o   7.30  7.440200
51   1ps3   2.28  7.148667
52   3dx1   3.58  7.320400
53   3d4z   4.89  7.464400
54   3dx2   6.82  7.515100
55   3ejr   8.57  7.660167
56   3l7b   2.40  7.420300
57   4eky   3.52  7.646633
58   3g2n   4.09  7.699100
59   3syr   5.10  7.454067
60   3ebp   5.91  7.578567
61   2w66   4.05  7.242233
62   2w4x   4.85  7.415200
63   2wca   5.60  7.497133
64   2xj7   6.66  7.284033
65   2vvn   7.30  7.416300
66   3aru   3.22  7.242667
67   3arv   5.64  7.557233
68   3ary   6.00  7.476967
69   3arq   6.40  7.346867
70   3arp   7.15  7.498367
71   4ih5   4.11  7.473367
72   4ih7   5.24  7.464033
73   3cj4   6.51  7.423167
74   4eo8   8.15  7.345100
75   3gnw   9.10  7.631500
76   1gpk   5.37  7.221667
77   1gpn   6.48  7.210667
78   1h23   8.35  7.254333
79   1h22   9.10  7.283200
80   1e66   9.89  7.506767
81   3f3a   4.19  7.267900
82   3f3c   6.02  7.301467
83   4mme   6.50  7.615867
84   3f3d   7.16  7.162333
85   3f3e   7.70  7.152700
86   2wbg   4.45  7.665800
87   2cbv   5.48  7.472600
88   2j78   6.42  7.499900
89   2j7h   7.19  7.300367
90   2cet   8.02  7.719433
91   3udh   2.85  7.223433
92   3rsx   4.41  7.563933
93   4djv   6.72  7.475800
94   2vkm   8.74  7.383000
95   4gid  10.77  7.298233
96   4jfs   5.27  7.645600
97   4j28   5.70  7.753667
98   2wvt   6.12  7.347833
99   2xii   7.20  7.739033
100  4pcs   7.85  7.652267
101  3rr4   4.55  7.690133
102  1s38   5.15  7.536400
103  1r5y   6.46  7.594033
104  3gc5   7.26  7.690467
105  3ge7   8.70  7.611733
106  4dli   5.62  7.506167
107  2zb1   6.32  7.407933
108  4f9w   6.94  7.406800
109  3e92   8.00  7.435867
110  3e93   8.85  7.540067
111  4owm   2.96  7.311100
112  3twp   3.92  7.422167
113  3r88   4.82  7.351033
114  4gkm   5.17  7.165400
115  3qqs   5.82  7.170300
116  3gv9   2.12  7.229800
117  3gr2   2.52  7.544600
118  4kz6   3.10  7.254867
119  4jxs   4.74  7.442167
120  2r9w   5.10  7.389967
121  2hb1   3.80  7.384533
122  1bzc   4.92  7.412800
123  2qbr   6.33  7.448767
124  2qbq   7.44  7.425700
125  2qbp   8.40  7.514633
126  1q8t   4.76  7.382800
127  1ydr   5.52  7.407567
128  1q8u   5.96  7.287567
129  1ydt   7.32  7.277500
130  3ag9   8.05  7.362067
131  3fcq   2.77  7.219800
132  1z9g   5.64  7.448567
133  1qf1   7.32  7.409033
134  5tmn   8.04  7.474133
135  4tmn  10.17  7.616733
136  4ddk   2.29  7.434233
137  4ddh   3.32  7.490533
138  3ivg   4.30  7.517267
139  3coz   5.57  7.703067
140  3coy   6.02  7.637633
141  3pxf   4.43  7.218500
142  4eor   6.30  7.512967
143  2xnb   6.83  7.450100
144  1pxn   7.15  7.493467
145  2fvd   8.52  7.608367
146  4k77   6.63  7.384267
147  4e5w   7.66  7.425500
148  4ivb   8.72  7.614600
149  4ivd   9.52  7.586000
150  4ivc  10.00  7.652300
151  4f09   6.70  7.634967
152  4gfm   7.22  7.440133
153  4hge   7.92  7.475867
154  4e6q   8.36  7.419467
155  4jia   9.22  7.556767
156  2brb   4.86  7.497267
157  2br1   5.14  7.506833
158  3jvr   5.72  7.409267
159  3jvs   6.54  7.602733
160  1nvq   8.25  7.233967
161  3acw   4.76  7.437667
162  4ea2   6.44  7.240233
163  2zcr   6.87  7.585167
164  2zy1   7.40  7.360767
165  2zcq   8.82  7.498667
166  1bcu   3.28  7.635733
167  3bv9   5.36  7.048967
168  1oyt   7.24  7.404267
169  2zda   8.40  7.289233
170  3utu  10.92  7.418967
171  3u9q   4.38  7.298133
172  2yfe   6.63  7.437400
173  3fur   8.00  7.534067
174  3b1m   8.48  7.485300
175  2p4y   9.00  7.458967
176  3uo4   6.52  7.427467
177  3up2   7.40  7.352200
178  3e5a   8.23  7.542033
179  2wtv   8.74  7.526500
180  3myg  10.70  7.587767
181  3kgp   2.57  7.291100
182  1c5z   4.01  7.337867
183  1o5b   5.77  7.331900
184  1owh   7.40  7.323033
185  1sqa   9.21  7.479833
186  4jsz   2.30  7.470633
187  3kwa   4.08  7.559300
188  2weg   6.50  7.541700
189  3ryj   7.80  7.468433
190  3dd0   9.00  7.635833
191  2xdl   3.10  7.566733
192  3b27   5.16  7.501400
193  1yc1   6.17  7.632133
194  3rlr   7.52  7.481667
195  2yki   9.46  7.573900
196  1z95   7.12  7.503033
197  3b68   8.40  7.592033
198  3b5r   8.77  7.639367
199  3b65   9.27  7.592433
200  3g0w   9.52  7.589200
201  4u4s   2.92  7.481700
202  1p1q   4.89  7.382267
203  1syi   5.44  7.311500
204  1p1n   6.80  7.284333
205  2al5   8.40  7.325967
206  3g2z   2.36  7.325833
207  3g31   2.89  7.257567
208  4de2   4.12  7.201767
209  4de3   5.52  7.276267
210  4de1   5.96  7.342033
211  1vso   4.72  7.356033
212  4dld   5.82  7.329400
213  3gbb   6.90  7.426600
214  3fv2   8.11  7.485133
215  3fv1   9.30  7.371867
216  4mgd   4.69  7.688467
217  2qe4   7.96  7.663067
218  1qkt   9.04  7.772367
219  2pog   9.54  7.720833
220  2p15  10.30  7.797100
221  2y5h   5.79  7.516767
222  1lpg   7.09  7.540400
223  2xbv   8.43  7.526933
224  1z6e   9.72  7.586500
225  1mq6  11.15  7.517167
226  1nc3   5.00  7.303033
227  1nc1   6.12  7.673767
228  1y6r  10.11  7.500867
229  4f2w  11.30  7.580600
230  4f3c  11.82  7.468400
231  1uto   2.27  7.408600
232  4abg   3.57  7.291933
233  3gy4   5.10  7.487867
234  1k1i   6.58  7.482133
235  1o3f   7.96  7.721200
236  2yge   5.06  7.337467
237  2fxs   6.06  7.569933
238  2iwx   6.68  7.469367
239  2wer   7.05  7.559800
240  2vw5   8.52  7.436900
241  4kzq   6.10  7.528867
242  4kzu   6.50  7.479900
243  4j21   7.41  7.427167
244  4j3l   7.80  7.529167
245  3kr8   8.10  7.423833
246  2ymd   3.16  7.539533
247  2wnc   6.32  7.345533
248  2xys   7.42  7.455033
249  2wn9   8.52  7.629767
250  2x00  11.33  7.329567
251  3ozt   4.13  7.690733
252  3ozs   5.33  7.695000
253  3oe5   6.88  7.731000
254  3oe4   7.47  7.690900
255  3nw9   9.00  7.741167
256  3ao4   2.07  7.607767
257  3zt2   2.84  7.451100
258  3zsx   3.28  7.456233
259  4cig   3.67  7.350933
260  3zso   5.12  7.569600
261  3n7a   3.70  7.608933
262  4ciw   4.82  7.566600
263  3n86   5.64  7.714467
264  3n76   6.85  7.759700
265  2xb8   7.59  7.848000
266  4bkt   3.62  7.565067
267  4w9c   4.65  7.597967
268  4w9l   5.02  7.613267
269  4w9i   5.96  7.604533
270  4w9h   6.73  7.616667
271  3nq9   4.03  7.303667
272  3ueu   5.24  7.237567
273  3uev   5.89  7.350567
274  3uew   6.31  7.233633
275  3uex   6.92  7.222400
276  3lka   2.82  7.425000
277  3ehy   5.85  7.302233
278  3tsk   7.17  7.350533
279  3nx7   8.10  7.445567
280  4gr0   9.55  7.316767
281  3dxg   2.40  7.196500
282  3d6q   3.76  7.403200
283  1w4o   5.22  7.554100
284  1o0h   5.92  7.722900
285  1u1b   7.80  7.737200

Summary of the scoring power: ===================================
The regression equation: logKa = 3.52 + -19.78 * Score
Number of favorable sample (N) = 285
Pearson correlation coefficient (R) = 0.238
Confidence interval of 90% Pearson R = [0.144 ~ 0.328] 
Standard deviation in fitting (SD) = 2.11
=================================================================

Template command for running the bootstrap in R program==========

rm(list=ls());
require(boot);
data_all<-read.table("GAP_processed_score",header=TRUE);
aa<-c(1:nrow(data_all));

mycore<-function(x,indices)
{
data_1<-matrix(NA,285,2);
for(i in 1:285);
    {
        data_1[i,1]=data_all[x[indices][i],2];
        data_1[i,2]=data_all[x[indices][i],3];
    }
        data_2<-data.frame(data_1);
        names(data_2)<-c("a","b");
        cor(data_2$a,data_2$b);
};

data.boot<-boot(aa,mycore,R=10000,stype="i",sim="ordinary");
sink("GAP-ci.results");
a<-boot.ci(data.boot,conf=0.9,type=c("bca"));
print(a);
sink();

=================================================================
